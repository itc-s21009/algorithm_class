import tkinter

# maze = [
#     [99, 99, 99, 99, 99, 99, 99, 99, 99],
#     [99, 0, 0, 0, 0, 0, 0, 0, 99],
#     [99, 0, 99, 99, 0, 99, 99, 0, 99],
#     [99, 99, 99, 0, 0, 0, 99, 0, 99],
#     [99, 0, 0, 0, 99, 0, 0, 0, 99],
#     [99, 0, 99, 0, 0, 0, 99, 0, 99],
#     [99, 99, 99, 99, 99, 99, 99, 99, 99]
# ]
# start_x = 7
# start_y = 1
# goal_x = 1
# goal_y = 5

# maze = [
# 	[99, 99, 99, 99, 99, 99, 99, 99],
# 	[99, 0, 0, 0, 99, 0, 0, 99],
# 	[99, 99, 99, 0, 0, 0, 99, 99],
# 	[99, 99, 99, 0, 99, 99, 99, 99],
# 	[99, 99, 0, 0, 99, 99, 99, 99],
# 	[99, 0, 0, 99, 99, 99, 99, 99],
# 	[99, 99, 99, 99, 99, 99, 99, 99]
# ]
# start_x = 1
# start_y = 1
# goal_x = 1
# goal_y = 5

# maze = [
# 	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99],
# 	[99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99],
# 	[99, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 99, 99, 0, 0, 0, 0, 99],
# 	[99, 99, 99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 99, 99, 0, 99, 99, 99, 99],
# 	[99, 99, 99, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 99, 99, 99, 0, 99, 99, 0, 99, 99, 99, 99],
# 	[99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 0, 0, 99, 99],
# 	[99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 99, 0, 99, 99],
# 	[99, 0, 0, 0, 0, 0, 99, 99, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 0, 0, 99, 99, 99, 99],
# 	[99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99],
# 	[99, 0, 0, 0, 0, 0, 0, 99, 99, 99, 99, 99, 0, 0, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99],
# 	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99],
# ]
# start_x = 1
# start_y = 1
# goal_x = 6
# goal_y = 10

# maze = [
# 	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 99, 99, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
# 	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99]
# ]
# start_x = 1
# start_y = 1
# goal_x = 28
# goal_y = 8

maze = [
	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99],
	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 99, 0, 0, 0, 0, 0, 99],
	[99, 0, 99, 0, 99, 0, 99, 99, 99, 0, 99, 99, 99, 0, 99, 99, 99, 0, 99, 99, 99],
	[99, 0, 0, 0, 99, 0, 99, 0, 99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99],
	[99, 0, 99, 0, 99, 99, 99, 0, 99, 0, 99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99],
	[99, 0, 99, 0, 99, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 99],
	[99, 99, 99, 0, 99, 0, 99, 99, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99],
	[99, 0, 0, 0, 99, 0, 0, 0, 0, 0, 99, 0, 0, 0, 99, 0, 0, 0, 0, 0, 99],
	[99, 99, 99, 99, 99, 0, 99, 99, 99, 0, 99, 99, 99, 0, 99, 0, 99, 99, 99, 0, 99],
	[99, 0, 0, 0, 0, 0, 0, 0, 99, 0, 99, 0, 0, 0, 99, 0, 99, 0, 99, 0, 99],
	[99, 99, 99, 0, 99, 99, 99, 0, 99, 0, 99, 0, 99, 0, 99, 99, 99, 0, 99, 0, 99],
	[99, 0, 99, 0, 99, 0, 99, 0, 99, 0, 0, 0, 99, 0, 0, 0, 99, 0, 0, 0, 99],
	[99, 0, 99, 0, 99, 0, 99, 99, 99, 0, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99],
	[99, 0, 0, 0, 99, 0, 0, 0, 99, 0, 99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99],
	[99, 0, 99, 0, 99, 0, 99, 99, 99, 0, 99, 0, 99, 0, 99, 0, 99, 0, 99, 0, 99],
	[99, 0, 99, 0, 0, 0, 0, 0, 99, 0, 99, 0, 0, 0, 99, 0, 99, 0, 99, 0, 99],
	[99, 0, 99, 99, 99, 0, 99, 0, 99, 99, 99, 99, 99, 99, 99, 0, 99, 99, 99, 99, 99],
	[99, 0, 99, 0, 0, 0, 99, 0, 99, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 99],
	[99, 0, 99, 0, 99, 99, 99, 99, 99, 99, 99, 99, 99, 0, 99, 99, 99, 0, 99, 99, 99],
	[99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 99],
	[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99]
]

start_x = 1
start_y = 1
goal_x = 19
goal_y = 19

WIDTH = len(maze[0])
HEIGHT = len(maze)
BLOCK_SIZE = 30
INTERVAL = 200
FNT = ("Times New Roman", 16)
goal = False
steps = 0


def walk():
    global goal, steps
    steps += 1
    for y in range(1, HEIGHT-1):
        for x in range(1, WIDTH-1):
            if maze[y][x] == steps:
                if maze[y - 1][x] == 0:  # 上のマス
                    maze[y - 1][x] = steps + 1
                if maze[y + 1][x] == 0:  # 下のマス
                    maze[y + 1][x] = steps + 1
                if maze[y][x - 1] == 0:  # 左のマス
                    maze[y][x - 1] = steps + 1
                if maze[y][x + 1] == 0:  # 右のマス
                    maze[y][x + 1] = steps + 1
    if maze[goal_y][goal_x] != 0:
        goal = True
        shortest_way()


def shortest_way():
    s = maze[goal_y][goal_x]
    x = goal_x
    y = goal_y
    while s > 0:
        print(f'({x}, {y})')
        maze[y][x] += 100
        s -= 1
        if maze[y - 1][x] == s:  # 上のマス
            y -= 1
        elif maze[y + 1][x] == s:  # 下のマス
            y += 1
        elif maze[y][x - 1] == s:  # 左のマス
            x -= 1
        elif maze[y][x + 1] == s:  # 右のマス
            x += 1


def draw_maze():
    cvs.delete('all')
    colors = ['red', 'orange', 'yellow', 'lime', 'cyan', 'blue', 'purple']
    step = 0
    for y in range(HEIGHT):
        for x in range(WIDTH):
            col = 'white'
            if maze[y][x] == 99:
                col = 'black'
            if maze[y][x] > 100:
                col = colors[maze[y][x]%7]
            cx = BLOCK_SIZE * x
            cy = BLOCK_SIZE * y
            offset = 2
            cvs.create_rectangle(cx, cy, cx + BLOCK_SIZE-offset, cy + BLOCK_SIZE-offset, fill=col, width=0)
            cvs.create_text(cx + BLOCK_SIZE/2, cy + BLOCK_SIZE/2, text=str(maze[y][x] % 100), font=FNT)
            if x == start_x and y == start_y:
                cvs.create_text(cx + BLOCK_SIZE/2, cy + 10, text='start', font=FNT, fill='red')
            if x == goal_x and y == goal_y:
                cvs.create_text(cx + BLOCK_SIZE/2, cy + 10, text='goal', font=FNT, fill='blue')


def main():
    if goal == False:
        walk()
    draw_maze()
    root.after(INTERVAL, main)


root = tkinter.Tk()
root.title('迷路を解く')
cvs = tkinter.Canvas(width=1280, height=720)
cvs.pack()
maze[start_y][start_x] = 1
main()
root.mainloop()
